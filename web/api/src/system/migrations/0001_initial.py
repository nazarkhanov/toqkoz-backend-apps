# Generated by Django 4.2.2 on 2024-06-04 08:01

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100, verbose_name='Название')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('country', models.CharField(default='', max_length=255, verbose_name='Страна')),
                ('city', models.CharField(default='', max_length=255, verbose_name='Город')),
                ('street', models.CharField(default='', max_length=255, verbose_name='Улица')),
                ('number', models.CharField(default='', max_length=16, verbose_name='Номер')),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
            ],
            options={
                'verbose_name': 'Объект',
                'verbose_name_plural': 'Объекты',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Без названия', max_length=255, verbose_name='Название')),
                ('status', models.CharField(choices=[('TRIAL', 'Пробный период'), ('DISABLED', 'Выключена'), ('ENABLED', 'Включена')], default='DISABLED', max_length=100, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100, verbose_name='Название')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trackers', to='system.facility')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trackers', to='system.organization')),
            ],
            options={
                'verbose_name': 'Трекер',
                'verbose_name_plural': 'Трекеры',
            },
        ),
        migrations.AddField(
            model_name='facility',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='system.organization'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Имя пользователя')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Отчество')),
                ('identifier_number', models.CharField(max_length=16, verbose_name='ИИН')),
                ('phone_number', models.CharField(max_length=10, verbose_name='Номер телефона')),
                ('is_active', models.BooleanField(default=True, verbose_name='Это пользователь активный?')),
                ('role', models.CharField(choices=[('ADMIN', 'Администратор'), ('MANAGER', 'Менеджер'), ('USER', 'Пользователь')], default='USER', max_length=100, verbose_name='Роль')),
                ('position', models.CharField(default='Пользователь', max_length=100, verbose_name='Должность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='system.organization', verbose_name='Организация')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
